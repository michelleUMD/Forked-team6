# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build Project
        run:
          echo Hello World
          java -version
          javac -version
          javac *.java

  testpacmanmove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Test PacMan Move
        run: |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestPacManMove
          
  testpacmangeconsume:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        # Runs a single command using the runners shell
        - name: Test PacMan Consume
          run: |
            cd Projects/P2/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestConsume
          
  testmapeatcookie:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        # Runs a single command using the runners shell
        - name: Test Map Eat Cookie
          run: |
            cd Projects/P2/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapEatCookie
     
  
  testisghostinrange:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        # Runs a single command using the runners shell
        - name: Test Is Ghost in Range
          run: |
            cd Projects/P2/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestGhostInRange
          
  testispacmaninrange:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

      # Runs a single command using the runners shell
        - name: Test Is Pacman in Range
          run: |
            cd Projects/P2/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestPacManInRange
          
  testmapmove:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        # Runs a single command using the runners shell
        - name: Test Map Move
          run: |
            cd Projects/P2/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapMove
          
  testghostmove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: testing ghost move
        run:  |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestGhostMove
  
  testgetloc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: testing getLoc
        run: |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapGetLoc
  
  testmapattack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: testing map attack
        run:  |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapAttack
          
  testpacmangetvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Test PacMan Get Valid Moves
        run: |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestPacManValidMoves
  
  testghostgetvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Test Ghost GetValidMoves
        run: |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestGhostValidMoves
          
  testghostattack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Test Ghost Attack
        run: |
          cd Projects/P2/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestAttack
